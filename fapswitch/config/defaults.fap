# Fapswith program defaults for all available options
#
# !! DO NOT MODIFY !!
#
# This file will be overwritten in updates.
#
# Set customized options in the job specific '.fap. files
# in your ~/.faps/ directory or calculation# specific settings
# in structure.fap in the working directory.
#
# Acceptable boolean values (case-insensitive) are True,
# yes, on, 1 and False, no, off, 0

# Run fapswitch as a service and wait for line-by-line input.
# See also commandline options. [bool]
daemon = False

# Backends to store the output structures. [str, list] {file, sqlite}
backends = file

# Method to use to test for collisions [str] {absolute, covalent, vdw}
collision_method = absolute

# Absolute value in Angstrom or scale factor for atomic radii for minimum
# distance in collision test for insertions [float]
collision_scale = 1.3

# Where to get the connectivity information from [str] {openbabel, file}
connectivity = openbabel

# Make functionalisations with the set of {.freeform.srings.} and
# [symm@try.strings]. [str, list]
custom_strings =

# Number of completely randomised structures to make. [int]
full_random_count = 0

# Maximum number of groups that will be used simultaneously. [int]
max_different = 0

# Socket port to run the server mode on; leave as zero to pick random
# available port as two instances cannot share a port. [int]
port = 0

# Should fapswitch produce all group@site combinations? [bool]
replace_all_sites = False

# Only use the specified groups in systematic functionalisations. [list]
replace_groups =

# Only replace the listed sites in systematic functionalisations. [list]
replace_only =

# Number of symmetry based randomised structures to make. [int]
site_random_count = 0

# Number of seconds of inactivity after which the fapswitchd.py
# daemon will close[int]
timeout = 7200

# Probability that a site will have no functionalisation in random switching
# scheme. [float]
unfunctionalised_probability = 0.5
