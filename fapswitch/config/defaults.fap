# Fapswith program defaults for all available options
#
# !! DO NOT MODIFY !!
#
# This file will be overwritten in updates.
#
# Set customized options in the job specific '.fap. files
# in your ~/.faps/ directory or calculation# specific settings
# in structure.fap in the working directory.
#
# Acceptable boolean values (case-insensitive) are True,
# yes, on, 1 and False, no, off, 0

# Backends to store the output structures. [str, list] {file, sqlite}
backends = file

# Method to use to test for collisions [str] {absolute, covalent, vdw, cvdw}
collision_method = vdw

# Absolute value in Angstrom or scale factor for atomic radii for minimum
# distance in collision test for insertions [float]
collision_scale = 1.122462048309373

# Where to get the connectivity information from and how to interpret it. [str]
# {openbabel, file, bondsonly}
connectivity = bondsonly

# Make functionalisations with the set of {.freeform.srings.} and
# [symm@try.strings]. [str, list]
custom_strings =

# Number of completely randomised structures to make. [int]
full_random_count = 0

# Convert the func@site part of filenames to unique hashes that may produce
# shorter filenames this can be done either 'never', 'always' or only
# when encountering an error writing the file 'onerror'. [str] {always, never,
# onerror}
hash_filenames = onerror

# Maximum number of groups that will be used simultaneously. [int]
max_different = 0

# Only load MEPO-QEq compatible groups. [bool]
mepo_only = False

# Socket port to run the server mode on; leave as zero to pick random
# available port as two instances cannot share a port. [int]
port = 0

# Should fapswitch produce all group@site combinations? [bool]
replace_all_sites = False

# Only use the specified groups in systematic functionalisations. [list]
# For example, to only use the most common substituents of Ertl (2003)
# set this to:
# replace_groups = Me Ph Cl OMe OH Et OEt F Br NO2 NH2 CN COOEt COMe
#     COOH Bnz COOMe iPr pTol 4ClPh tBu 4OMePh CF3 COPh Pr NMe2 Bu
#     OBnz 4NO2Ph OAc 4FPh I 4BrPh 2ClPh All COH SMe CONH2 NPh 24DClPh
#     CHex Morph HCO 3ClPh oTol 2Fur iBu NCOMe
replace_groups =

# Only replace the listed sites in systematic functionalisations. [list]
replace_only =

# Number of times the group will be rotated when testing for insertion. For
# systematic functionalisation, each rotation will be 360/rotations. For
# randomised cases this is the number of random trials before failing. Changing
# this value will produce different structures for the same functionalisation
# string. [int]
rotations = 12

# Number of symmetry based randomised structures to make. [int]
site_random_count = 0

# Number of seconds of inactivity after which the fapswitchd.py
# daemon will close[int]
timeout = 7200

# Probability that a site will have no functionalisation in random switching
# scheme. [float]
unfunctionalised_probability = 0.5
